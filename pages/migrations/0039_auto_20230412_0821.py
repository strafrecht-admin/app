# Generated by Django 3.2.5 on 2023-04-12 06:21

from django.db import migrations, models
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail_color_panel.blocks
import wagtailmodelchooser.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0038_alter_exams_type'),
    ]

    operations = [
        migrations.AddField(
            model_name='sessionpage',
            name='allow_comments',
            field=models.BooleanField(default=False, verbose_name='Kommentare erlaubt'),
        ),
        migrations.AlterField(
            model_name='genericpage',
            name='sidebar',
            field=wagtail.fields.StreamField([('sidebar', wagtail.blocks.StreamBlock([('sidebar_title', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Grau unterlegte Überschrift')), ('sidebar_simple', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Schlichter Text')), ('sidebar_border', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Grau umrandeter Kasten')), ('sidebar_image_text', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Bild links, Text rechts')), ('sidebar_header', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('color', wagtail_color_panel.blocks.NativeColorBlock('color', default='#333d44')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('content', wagtail.blocks.RichTextBlock(required=False))], label='Bild oben, Text darunter')), ('sidebar_calendar_text', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock()), ('calendar', wagtail.blocks.DateBlock(format='%Y-%m-%d'))], label='Kalender links, Text rechts')), ('sidebar_poll', wagtail.blocks.StructBlock([('poll', wagtailmodelchooser.blocks.ModelChooserBlock(target_model='wagtailpolls.poll'))], label='Abstimmung')), ('sidebar_subscribe', wagtail.blocks.StructBlock([], label='Newsletter-Anmeldung')), ('sidebar_event', wagtail.blocks.StructBlock([])), ('sidebar_search', wagtail.blocks.StructBlock([], label='Suchfeld'))], label='Seitenleiste', required=False))], verbose_name='Seitenleiste'),
        ),
        migrations.AlterField(
            model_name='homepage',
            name='sidebar',
            field=wagtail.fields.StreamField([('sidebar', wagtail.blocks.StreamBlock([('sidebar_title', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Grau unterlegte Überschrift')), ('sidebar_simple', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Schlichter Text')), ('sidebar_border', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock())], label='Grau umrandeter Kasten')), ('sidebar_image_text', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Bild links, Text rechts')), ('sidebar_header', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('color', wagtail_color_panel.blocks.NativeColorBlock('color', default='#333d44')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('content', wagtail.blocks.RichTextBlock(required=False))], label='Bild oben, Text darunter')), ('sidebar_calendar_text', wagtail.blocks.StructBlock([('content', wagtail.blocks.RichTextBlock()), ('calendar', wagtail.blocks.DateBlock(format='%Y-%m-%d'))], label='Kalender links, Text rechts')), ('sidebar_poll', wagtail.blocks.StructBlock([('poll', wagtailmodelchooser.blocks.ModelChooserBlock(target_model='wagtailpolls.poll'))], label='Abstimmung')), ('sidebar_subscribe', wagtail.blocks.StructBlock([], label='Newsletter-Anmeldung')), ('sidebar_event', wagtail.blocks.StructBlock([])), ('sidebar_search', wagtail.blocks.StructBlock([], label='Suchfeld'))], label='Seitenleiste', required=False))], verbose_name='Seitenleiste'),
        ),
        migrations.AlterField(
            model_name='jurcoachcarousel',
            name='illustration',
            field=models.CharField(blank=True, choices=[('falltraining', 'Falltraining'), ('wiki', 'Problemfeld-Wiki'), ('mct', 'Multiple-Choice-Test'), ('klausurdatenbank', 'Klausurdatenbank'), ('rechtsprechung', 'Höchstrichterliche Rechtsprechung'), ('tandemklausur', 'Tandemklausur'), ('lernplan', 'Lernplan'), ('reward-system', 'Reward-System')], max_length=255, verbose_name='Auswahl der Illustration'),
        ),
    ]
